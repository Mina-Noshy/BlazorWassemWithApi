@page "/employee/delete/{id}"

<div class="text-center">
    <h4>Delete Employee</h4>
    <p>
        Are you sure to delete this?
    </p>
</div>

@if (_employee == null)
{
    <Loading Title="Delete Emolyee" Message="please wait..."></Loading>
}
else
{

    <div>
        <h5>Employee</h5>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                Name
            </dt>
            <dd class="col-sm-10">
                @_employee.name
            </dd>
            <dt class="col-sm-2">
                Department
            </dt>
            <dd class="col-sm-10">
                @_employee.department
            </dd>
            <dt class="col-sm-2">
                Phone
            </dt>
            <dd class="col-sm-10">
                @_employee.phone
            </dd>
            <dt class="col-sm-2">
                Job
            </dt>
            <dd class="col-sm-10">
                @_employee.job
            </dd>
        </dl>
    </div>
    <div>
        <a href="/employee/list" class="btn btn-primary">Cancel</a>
        <button @onclick="@(e => DeleteEmployee(_employee.id))" class="btn btn-danger">Delete now!</button>
    </div>

}

@code {

    [Inject]
    public IEmployeeService _service { get; set; }

    [Inject]
    public NavigationManager _navigation { get; set; }

    public Employee _employee { get; set; }

    [Parameter]
    public string Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _employee = await _service.Find(int.Parse(Id));
    }

    private async Task DeleteEmployee(int id)
    {
        await _service.Delete(int.Parse(Id));
        _navigation.NavigateTo("/employee/list");
    }

}
